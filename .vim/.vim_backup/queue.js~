function Queue() {
		this.dataStore = [];
		this.enqueue = enqueue;
		this.dequeue = dequeue;
		this.front = front;
		this.back = back;
		this.toString = toString;
		this.empty = empty;
		this.count = count;
}

function count() {
		return this.dataStore.length;
}

function enqueue(element) {
		this.dataStore.push(element);
}

function dequeue() {
		return this.dataStore.shift();
}

function front() {
		return this.dataStore[0];
}

function back() {
		return this.dataStore[this.dataStore.length - 1];
}

function toString() {
		var retStr = '';
		for (var i = 0; i < this.dataStore.length; ++i) {
				retStr += this.dataStore[i] + '\n';
		}
		return retStr;
}

function empty() {
		return this.dataStore.length == 0 ? true : false;
}


// 方块舞的舞伴分配问题
function Dancer(name, sex) {
		this.name = name;
		this.sex = sex;
}

function getDancers(males, females) {
		var names = read('dancers.txt').split('\n');
		for (var i = 0; i < names.length; ++i) {
				names[i] = names[i].trim();
		}
		for (var i = 0; i < names.length; ++i) {
				var dancer = names[i].split(' ');
				var sex = dancer[0];
				var name = dancer[1];
				if (sex == 'F') {
						females.enqueue(new Dancer(name, sex));
				} else {
						males.enqueue(new Dancer(name, sex));
				}
		}
}

function dance(males, females) {
		print('The dance partners are: \n');
		while (!females.empty() && !males.empty()) {
				person = females.dequeue();
				putstr("Female dancer is: " + person.name);
				person = males.dequeue();
				putstr(" and the male dancer is: " + person.name);
				print();
		}
		print();
}

var maleDancers = new Queue();
var femaleDancers = new Queue();
getDancers(maleDancers, femaleDancers);
dance(maleDancers, femaleDancers);

femaleDancers.count() > 0 && print('This are ' + femaleDancers.count() + ' female dancers is waiting to dance.');
maleDancers.count() > 0 && print('This are ' + maleDancers.count() + ' male dancers is waiting to dance.');

/*
var q = new Queue();
q.enqueue('Meredith');
q.enqueue('Cynthia');
q.enqueue('Jennifer');
print(q.toString());
q.dequeue();
print(q.toString());
print('Front of queue: ' + q.front());
print('Back of queue: ' + q.back());
*/
