/**
 * @file 初始化server环境
 * @descript 从github加载服务器环境模板
 * @author fengshangshi
 */
var fs = require('fs-extra');
var Scaffold = require('sugar-template-scaffold');
var configs = require('../../config/scaffold');

module.exports = function() {
	var config = configs.framework['config'];
	var id = config['repos'],
		type = config['type'];

	var template = id.split('/')[1];

	var scaffold = new Scaffold({type: type});

	sugar.tlog('服务器环境初始化开始');
	sugar.tlog('正在下载服务器模板...');
	scaffold.download(
		// repos
		id,

		// 回调函数
		function(err, src) {
			if (err) {
				sugar.error('下载服务器模板失败: ' + err, true, true);
				return false;
			}

			sugar.tlog('下载服务器模板完成');
			sugar.tlog('正在复制文件...');
			
			var target = process.cwd();
			src += ('/' + template + '-master');
			fs.copy(src, target, function(err) {
				if (err) {
					sugar.error('复制文件失败:' + err, true, true);
					return false;
				}

				sugar.tlog('文件复制完成');
				sugar.tlog('正在安装依赖模块...');

				// 安装必要模板
				var exec = require('child_process').exec,
					command = 'npm install';

				var e = exec(command, function(err, stdout, stderr) {
					if (err) {
						sugar.error(err);
						sugar.error('安装依赖模块失败，请执行命令npm install', true, true);
					} else {
						sugar.tlog('依赖模块安装完成');
						sugar.tlog('服务器环境初始化成功');
						sugar.tlog('执行命令ssugar server start');
					}
				});

				// 打印子进程返回的信息
				e.stdout.on('data', function(chunk) {
					console.log(chunk);
				});
			});
		},

		// 回调函数-复制进度function(progress, loaded, total)
		function(progress, loaded, total) {
			if (total <= 0)  return false;
			progress = (progress * 100).toFixed(2);
			process.stdout.clearLine();
			process.stdout.write('模板已经加载: ' + progress + '%');
			process.stdout.cursorTo(0);
			if (loaded === total) {
				process.stdout.clearLine();
			}
		}
	);
};
